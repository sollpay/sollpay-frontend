{"version":3,"sources":["pages/subscribe/Subscribe.tsx"],"names":["Wrapper","Container","SubscribePage","planAddress","useParams","useState","useEffect","setIsPlanAddressValid","isPlanAddressValid"],"mappings":"uQAQMA,EAAO,qDAIPC,EAAS,wDAOFC,EAAoB,WAAM,IAC7BC,EAAgBC,cAAhBD,YAD6B,EAIeE,oBAApD,GAJqC,mBAI/B,EAJ+B,KAI/B,EAJ+B,KAcrC,OARAC,qBAAU,WAER,IACE,WACAC,MACA,aALJD,IASE,yBACE,4BACA,yBACGE,EAAqB,uBAAWL,YAAd,IAAnB,0B","file":"static/js/7.ddf62dcc.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { useParams } from 'react-router-dom';\nimport { PublicKey } from '@solana/web3.js';\nimport { Header } from 'components/common/Header';\nimport { Subscribe } from 'components/common/Subscribe';\n\nconst Wrapper = styled.div`\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin: 48px auto 0;\n`;\n\nexport const SubscribePage: FC = () => {\n  const { planAddress } = useParams<{\n    planAddress: string;\n  }>();\n  const [isPlanAddressValid, setIsPlanAddressValid] = useState(false);\n\n  useEffect(() => {\n    // TODO: check better validation pubkey method\n    try {\n      new PublicKey(planAddress);\n      setIsPlanAddressValid(true);\n    } catch {}\n  }, []);\n\n  return (\n    <Wrapper>\n      <Header />\n      <Container>\n        {isPlanAddressValid ? <Subscribe planAddress={planAddress} /> : 'Invalid plan address'}\n      </Container>\n    </Wrapper>\n  );\n};\n"],"sourceRoot":""}